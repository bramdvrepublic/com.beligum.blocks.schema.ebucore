/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.beligum.blocks.schema.ebucore.v2015.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class screenWidthType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"screenWidthType\",\"namespace\":\"com.beligum.blocks.schema.ebucore.v2015.avro\",\"fields\":[{\"name\":\"azimuth\",\"type\":[\"null\",\"float\"],\"source\":\"attribute azimuth\"},{\"name\":\"X\",\"type\":[\"null\",\"float\"],\"source\":\"attribute X\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Float azimuth;
  @Deprecated public java.lang.Float X;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public screenWidthType() {}

  /**
   * All-args constructor.
   */
  public screenWidthType(java.lang.Float azimuth, java.lang.Float X) {
    this.azimuth = azimuth;
    this.X = X;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return azimuth;
    case 1: return X;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: azimuth = (java.lang.Float)value$; break;
    case 1: X = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'azimuth' field.
   */
  public java.lang.Float getAzimuth() {
    return azimuth;
  }

  /**
   * Sets the value of the 'azimuth' field.
   * @param value the value to set.
   */
  public void setAzimuth(java.lang.Float value) {
    this.azimuth = value;
  }

  /**
   * Gets the value of the 'X' field.
   */
  public java.lang.Float getX() {
    return X;
  }

  /**
   * Sets the value of the 'X' field.
   * @param value the value to set.
   */
  public void setX(java.lang.Float value) {
    this.X = value;
  }

  /** Creates a new screenWidthType RecordBuilder */
  public static com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.Builder newBuilder() {
    return new com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.Builder();
  }
  
  /** Creates a new screenWidthType RecordBuilder by copying an existing Builder */
  public static com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.Builder newBuilder(com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.Builder other) {
    return new com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.Builder(other);
  }
  
  /** Creates a new screenWidthType RecordBuilder by copying an existing screenWidthType instance */
  public static com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.Builder newBuilder(com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType other) {
    return new com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.Builder(other);
  }
  
  /**
   * RecordBuilder for screenWidthType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<screenWidthType>
    implements org.apache.avro.data.RecordBuilder<screenWidthType> {

    private java.lang.Float azimuth;
    private java.lang.Float X;

    /** Creates a new Builder */
    private Builder() {
      super(com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.azimuth)) {
        this.azimuth = data().deepCopy(fields()[0].schema(), other.azimuth);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.X)) {
        this.X = data().deepCopy(fields()[1].schema(), other.X);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing screenWidthType instance */
    private Builder(com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType other) {
            super(com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.SCHEMA$);
      if (isValidValue(fields()[0], other.azimuth)) {
        this.azimuth = data().deepCopy(fields()[0].schema(), other.azimuth);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.X)) {
        this.X = data().deepCopy(fields()[1].schema(), other.X);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'azimuth' field */
    public java.lang.Float getAzimuth() {
      return azimuth;
    }
    
    /** Sets the value of the 'azimuth' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.Builder setAzimuth(java.lang.Float value) {
      validate(fields()[0], value);
      this.azimuth = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'azimuth' field has been set */
    public boolean hasAzimuth() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'azimuth' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.Builder clearAzimuth() {
      azimuth = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'X' field */
    public java.lang.Float getX() {
      return X;
    }
    
    /** Sets the value of the 'X' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.Builder setX(java.lang.Float value) {
      validate(fields()[1], value);
      this.X = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'X' field has been set */
    public boolean hasX() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'X' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.screenWidthType.Builder clearX() {
      X = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public screenWidthType build() {
      try {
        screenWidthType record = new screenWidthType();
        record.azimuth = fieldSetFlags()[0] ? this.azimuth : (java.lang.Float) defaultValue(fields()[0]);
        record.X = fieldSetFlags()[1] ? this.X : (java.lang.Float) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
