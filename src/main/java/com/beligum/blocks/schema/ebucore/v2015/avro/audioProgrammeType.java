/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.beligum.blocks.schema.ebucore.v2015.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class audioProgrammeType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"audioProgrammeType\",\"namespace\":\"com.beligum.blocks.schema.ebucore.v2015.avro\",\"fields\":[{\"name\":\"audioProgrammeID\",\"type\":\"string\",\"source\":\"attribute audioProgrammeID\"},{\"name\":\"audioProgrammeName\",\"type\":[\"null\",\"string\"],\"source\":\"attribute audioProgrammeName\"},{\"name\":\"audioProgrammeLanguage\",\"type\":[\"null\",\"string\"],\"source\":\"attribute audioProgrammeLanguage\"},{\"name\":\"start\",\"type\":[\"null\",\"string\"],\"source\":\"attribute start\"},{\"name\":\"end\",\"type\":[\"null\",\"string\"],\"source\":\"attribute end\"},{\"name\":\"typeLabel\",\"type\":[\"null\",\"string\"],\"source\":\"attribute typeLabel\"},{\"name\":\"typeDefinition\",\"type\":[\"null\",\"string\"],\"source\":\"attribute typeDefinition\"},{\"name\":\"typeLink\",\"type\":[\"null\",\"string\"],\"source\":\"attribute typeLink\"},{\"name\":\"typeSource\",\"type\":[\"null\",\"string\"],\"source\":\"attribute typeSource\"},{\"name\":\"typeNamespace\",\"type\":[\"null\",\"string\"],\"source\":\"attribute typeNamespace\"},{\"name\":\"typeLanguage\",\"type\":[\"null\",\"string\"],\"source\":\"attribute typeLanguage\"},{\"name\":\"formatLabel\",\"type\":[\"null\",\"string\"],\"source\":\"attribute formatLabel\"},{\"name\":\"formatDefinition\",\"type\":[\"null\",\"string\"],\"source\":\"attribute formatDefinition\"},{\"name\":\"formatLink\",\"type\":[\"null\",\"string\"],\"source\":\"attribute formatLink\"},{\"name\":\"formatSource\",\"type\":[\"null\",\"string\"],\"source\":\"attribute formatSource\"},{\"name\":\"formatNamespace\",\"type\":[\"null\",\"string\"],\"source\":\"attribute formatNamespace\"},{\"name\":\"formatLanguage\",\"type\":[\"null\",\"string\"],\"source\":\"attribute formatLanguage\"},{\"name\":\"maxDuckingDepth\",\"type\":[\"null\",\"float\"],\"source\":\"attribute maxDuckingDepth\"},{\"name\":\"audioContentIDRef\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"source\":\"element audioContentIDRef\"},{\"name\":\"loudnessMetadata\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"loudnessMetadataType\",\"fields\":[{\"name\":\"loudnessMethod\",\"type\":[\"null\",\"string\"],\"source\":\"attribute loudnessMethod\"},{\"name\":\"loudnessRecType\",\"type\":[\"null\",\"string\"],\"source\":\"attribute loudnessRecType\"},{\"name\":\"loudnessCorrectionType\",\"type\":[\"null\",\"string\"],\"source\":\"attribute loudnessCorrectionType\"},{\"name\":\"integratedLoudness\",\"type\":[\"null\",\"float\"],\"source\":\"element integratedLoudness\"},{\"name\":\"loudnessRange\",\"type\":[\"null\",\"float\"],\"source\":\"element loudnessRange\"},{\"name\":\"maxTruePeak\",\"type\":[\"null\",\"float\"],\"source\":\"element maxTruePeak\"},{\"name\":\"maxMomentary\",\"type\":[\"null\",\"float\"],\"source\":\"element maxMomentary\"},{\"name\":\"maxShortTerm\",\"type\":[\"null\",\"float\"],\"source\":\"element maxShortTerm\"},{\"name\":\"dialogLoudness\",\"type\":[\"null\",\"float\"],\"source\":\"element dialogLoudness\"}]}],\"source\":\"element loudnessMetadata\"},{\"name\":\"audioProgrammeReferenceScreen\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"audioProgrammeReferenceScreenType\",\"fields\":[{\"name\":\"aspectRatio\",\"type\":[\"null\",\"float\"],\"source\":\"element aspectRatio\"},{\"name\":\"screenCentrePosition\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"screenCentrePositionType\",\"fields\":[{\"name\":\"azimuth\",\"type\":[\"null\",\"float\"],\"source\":\"attribute azimuth\"},{\"name\":\"elevation\",\"type\":[\"null\",\"float\"],\"source\":\"attribute elevation\"},{\"name\":\"distance\",\"type\":[\"null\",\"float\"],\"source\":\"attribute distance\"},{\"name\":\"X\",\"type\":[\"null\",\"float\"],\"source\":\"attribute X\"},{\"name\":\"Y\",\"type\":[\"null\",\"float\"],\"source\":\"attribute Y\"},{\"name\":\"Z\",\"type\":[\"null\",\"float\"],\"source\":\"attribute Z\"}]}],\"source\":\"element screenCentrePosition\"},{\"name\":\"screenWidth\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"screenWidthType\",\"fields\":[{\"name\":\"azimuth\",\"type\":[\"null\",\"float\"],\"source\":\"attribute azimuth\"},{\"name\":\"X\",\"type\":[\"null\",\"float\"],\"source\":\"attribute X\"}]}],\"source\":\"element screenWidth\"}]}],\"source\":\"element audioProgrammeReferenceScreen\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence audioProgrammeID;
  @Deprecated public java.lang.CharSequence audioProgrammeName;
  @Deprecated public java.lang.CharSequence audioProgrammeLanguage;
  @Deprecated public java.lang.CharSequence start;
  @Deprecated public java.lang.CharSequence end;
  @Deprecated public java.lang.CharSequence typeLabel;
  @Deprecated public java.lang.CharSequence typeDefinition;
  @Deprecated public java.lang.CharSequence typeLink;
  @Deprecated public java.lang.CharSequence typeSource;
  @Deprecated public java.lang.CharSequence typeNamespace;
  @Deprecated public java.lang.CharSequence typeLanguage;
  @Deprecated public java.lang.CharSequence formatLabel;
  @Deprecated public java.lang.CharSequence formatDefinition;
  @Deprecated public java.lang.CharSequence formatLink;
  @Deprecated public java.lang.CharSequence formatSource;
  @Deprecated public java.lang.CharSequence formatNamespace;
  @Deprecated public java.lang.CharSequence formatLanguage;
  @Deprecated public java.lang.Float maxDuckingDepth;
  @Deprecated public java.util.List<java.lang.CharSequence> audioContentIDRef;
  @Deprecated public com.beligum.blocks.schema.ebucore.v2015.avro.loudnessMetadataType loudnessMetadata;
  @Deprecated public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeReferenceScreenType audioProgrammeReferenceScreen;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public audioProgrammeType() {}

  /**
   * All-args constructor.
   */
  public audioProgrammeType(java.lang.CharSequence audioProgrammeID, java.lang.CharSequence audioProgrammeName, java.lang.CharSequence audioProgrammeLanguage, java.lang.CharSequence start, java.lang.CharSequence end, java.lang.CharSequence typeLabel, java.lang.CharSequence typeDefinition, java.lang.CharSequence typeLink, java.lang.CharSequence typeSource, java.lang.CharSequence typeNamespace, java.lang.CharSequence typeLanguage, java.lang.CharSequence formatLabel, java.lang.CharSequence formatDefinition, java.lang.CharSequence formatLink, java.lang.CharSequence formatSource, java.lang.CharSequence formatNamespace, java.lang.CharSequence formatLanguage, java.lang.Float maxDuckingDepth, java.util.List<java.lang.CharSequence> audioContentIDRef, com.beligum.blocks.schema.ebucore.v2015.avro.loudnessMetadataType loudnessMetadata, com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeReferenceScreenType audioProgrammeReferenceScreen) {
    this.audioProgrammeID = audioProgrammeID;
    this.audioProgrammeName = audioProgrammeName;
    this.audioProgrammeLanguage = audioProgrammeLanguage;
    this.start = start;
    this.end = end;
    this.typeLabel = typeLabel;
    this.typeDefinition = typeDefinition;
    this.typeLink = typeLink;
    this.typeSource = typeSource;
    this.typeNamespace = typeNamespace;
    this.typeLanguage = typeLanguage;
    this.formatLabel = formatLabel;
    this.formatDefinition = formatDefinition;
    this.formatLink = formatLink;
    this.formatSource = formatSource;
    this.formatNamespace = formatNamespace;
    this.formatLanguage = formatLanguage;
    this.maxDuckingDepth = maxDuckingDepth;
    this.audioContentIDRef = audioContentIDRef;
    this.loudnessMetadata = loudnessMetadata;
    this.audioProgrammeReferenceScreen = audioProgrammeReferenceScreen;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return audioProgrammeID;
    case 1: return audioProgrammeName;
    case 2: return audioProgrammeLanguage;
    case 3: return start;
    case 4: return end;
    case 5: return typeLabel;
    case 6: return typeDefinition;
    case 7: return typeLink;
    case 8: return typeSource;
    case 9: return typeNamespace;
    case 10: return typeLanguage;
    case 11: return formatLabel;
    case 12: return formatDefinition;
    case 13: return formatLink;
    case 14: return formatSource;
    case 15: return formatNamespace;
    case 16: return formatLanguage;
    case 17: return maxDuckingDepth;
    case 18: return audioContentIDRef;
    case 19: return loudnessMetadata;
    case 20: return audioProgrammeReferenceScreen;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: audioProgrammeID = (java.lang.CharSequence)value$; break;
    case 1: audioProgrammeName = (java.lang.CharSequence)value$; break;
    case 2: audioProgrammeLanguage = (java.lang.CharSequence)value$; break;
    case 3: start = (java.lang.CharSequence)value$; break;
    case 4: end = (java.lang.CharSequence)value$; break;
    case 5: typeLabel = (java.lang.CharSequence)value$; break;
    case 6: typeDefinition = (java.lang.CharSequence)value$; break;
    case 7: typeLink = (java.lang.CharSequence)value$; break;
    case 8: typeSource = (java.lang.CharSequence)value$; break;
    case 9: typeNamespace = (java.lang.CharSequence)value$; break;
    case 10: typeLanguage = (java.lang.CharSequence)value$; break;
    case 11: formatLabel = (java.lang.CharSequence)value$; break;
    case 12: formatDefinition = (java.lang.CharSequence)value$; break;
    case 13: formatLink = (java.lang.CharSequence)value$; break;
    case 14: formatSource = (java.lang.CharSequence)value$; break;
    case 15: formatNamespace = (java.lang.CharSequence)value$; break;
    case 16: formatLanguage = (java.lang.CharSequence)value$; break;
    case 17: maxDuckingDepth = (java.lang.Float)value$; break;
    case 18: audioContentIDRef = (java.util.List<java.lang.CharSequence>)value$; break;
    case 19: loudnessMetadata = (com.beligum.blocks.schema.ebucore.v2015.avro.loudnessMetadataType)value$; break;
    case 20: audioProgrammeReferenceScreen = (com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeReferenceScreenType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'audioProgrammeID' field.
   */
  public java.lang.CharSequence getAudioProgrammeID() {
    return audioProgrammeID;
  }

  /**
   * Sets the value of the 'audioProgrammeID' field.
   * @param value the value to set.
   */
  public void setAudioProgrammeID(java.lang.CharSequence value) {
    this.audioProgrammeID = value;
  }

  /**
   * Gets the value of the 'audioProgrammeName' field.
   */
  public java.lang.CharSequence getAudioProgrammeName() {
    return audioProgrammeName;
  }

  /**
   * Sets the value of the 'audioProgrammeName' field.
   * @param value the value to set.
   */
  public void setAudioProgrammeName(java.lang.CharSequence value) {
    this.audioProgrammeName = value;
  }

  /**
   * Gets the value of the 'audioProgrammeLanguage' field.
   */
  public java.lang.CharSequence getAudioProgrammeLanguage() {
    return audioProgrammeLanguage;
  }

  /**
   * Sets the value of the 'audioProgrammeLanguage' field.
   * @param value the value to set.
   */
  public void setAudioProgrammeLanguage(java.lang.CharSequence value) {
    this.audioProgrammeLanguage = value;
  }

  /**
   * Gets the value of the 'start' field.
   */
  public java.lang.CharSequence getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * @param value the value to set.
   */
  public void setStart(java.lang.CharSequence value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'end' field.
   */
  public java.lang.CharSequence getEnd() {
    return end;
  }

  /**
   * Sets the value of the 'end' field.
   * @param value the value to set.
   */
  public void setEnd(java.lang.CharSequence value) {
    this.end = value;
  }

  /**
   * Gets the value of the 'typeLabel' field.
   */
  public java.lang.CharSequence getTypeLabel() {
    return typeLabel;
  }

  /**
   * Sets the value of the 'typeLabel' field.
   * @param value the value to set.
   */
  public void setTypeLabel(java.lang.CharSequence value) {
    this.typeLabel = value;
  }

  /**
   * Gets the value of the 'typeDefinition' field.
   */
  public java.lang.CharSequence getTypeDefinition() {
    return typeDefinition;
  }

  /**
   * Sets the value of the 'typeDefinition' field.
   * @param value the value to set.
   */
  public void setTypeDefinition(java.lang.CharSequence value) {
    this.typeDefinition = value;
  }

  /**
   * Gets the value of the 'typeLink' field.
   */
  public java.lang.CharSequence getTypeLink() {
    return typeLink;
  }

  /**
   * Sets the value of the 'typeLink' field.
   * @param value the value to set.
   */
  public void setTypeLink(java.lang.CharSequence value) {
    this.typeLink = value;
  }

  /**
   * Gets the value of the 'typeSource' field.
   */
  public java.lang.CharSequence getTypeSource() {
    return typeSource;
  }

  /**
   * Sets the value of the 'typeSource' field.
   * @param value the value to set.
   */
  public void setTypeSource(java.lang.CharSequence value) {
    this.typeSource = value;
  }

  /**
   * Gets the value of the 'typeNamespace' field.
   */
  public java.lang.CharSequence getTypeNamespace() {
    return typeNamespace;
  }

  /**
   * Sets the value of the 'typeNamespace' field.
   * @param value the value to set.
   */
  public void setTypeNamespace(java.lang.CharSequence value) {
    this.typeNamespace = value;
  }

  /**
   * Gets the value of the 'typeLanguage' field.
   */
  public java.lang.CharSequence getTypeLanguage() {
    return typeLanguage;
  }

  /**
   * Sets the value of the 'typeLanguage' field.
   * @param value the value to set.
   */
  public void setTypeLanguage(java.lang.CharSequence value) {
    this.typeLanguage = value;
  }

  /**
   * Gets the value of the 'formatLabel' field.
   */
  public java.lang.CharSequence getFormatLabel() {
    return formatLabel;
  }

  /**
   * Sets the value of the 'formatLabel' field.
   * @param value the value to set.
   */
  public void setFormatLabel(java.lang.CharSequence value) {
    this.formatLabel = value;
  }

  /**
   * Gets the value of the 'formatDefinition' field.
   */
  public java.lang.CharSequence getFormatDefinition() {
    return formatDefinition;
  }

  /**
   * Sets the value of the 'formatDefinition' field.
   * @param value the value to set.
   */
  public void setFormatDefinition(java.lang.CharSequence value) {
    this.formatDefinition = value;
  }

  /**
   * Gets the value of the 'formatLink' field.
   */
  public java.lang.CharSequence getFormatLink() {
    return formatLink;
  }

  /**
   * Sets the value of the 'formatLink' field.
   * @param value the value to set.
   */
  public void setFormatLink(java.lang.CharSequence value) {
    this.formatLink = value;
  }

  /**
   * Gets the value of the 'formatSource' field.
   */
  public java.lang.CharSequence getFormatSource() {
    return formatSource;
  }

  /**
   * Sets the value of the 'formatSource' field.
   * @param value the value to set.
   */
  public void setFormatSource(java.lang.CharSequence value) {
    this.formatSource = value;
  }

  /**
   * Gets the value of the 'formatNamespace' field.
   */
  public java.lang.CharSequence getFormatNamespace() {
    return formatNamespace;
  }

  /**
   * Sets the value of the 'formatNamespace' field.
   * @param value the value to set.
   */
  public void setFormatNamespace(java.lang.CharSequence value) {
    this.formatNamespace = value;
  }

  /**
   * Gets the value of the 'formatLanguage' field.
   */
  public java.lang.CharSequence getFormatLanguage() {
    return formatLanguage;
  }

  /**
   * Sets the value of the 'formatLanguage' field.
   * @param value the value to set.
   */
  public void setFormatLanguage(java.lang.CharSequence value) {
    this.formatLanguage = value;
  }

  /**
   * Gets the value of the 'maxDuckingDepth' field.
   */
  public java.lang.Float getMaxDuckingDepth() {
    return maxDuckingDepth;
  }

  /**
   * Sets the value of the 'maxDuckingDepth' field.
   * @param value the value to set.
   */
  public void setMaxDuckingDepth(java.lang.Float value) {
    this.maxDuckingDepth = value;
  }

  /**
   * Gets the value of the 'audioContentIDRef' field.
   */
  public java.util.List<java.lang.CharSequence> getAudioContentIDRef() {
    return audioContentIDRef;
  }

  /**
   * Sets the value of the 'audioContentIDRef' field.
   * @param value the value to set.
   */
  public void setAudioContentIDRef(java.util.List<java.lang.CharSequence> value) {
    this.audioContentIDRef = value;
  }

  /**
   * Gets the value of the 'loudnessMetadata' field.
   */
  public com.beligum.blocks.schema.ebucore.v2015.avro.loudnessMetadataType getLoudnessMetadata() {
    return loudnessMetadata;
  }

  /**
   * Sets the value of the 'loudnessMetadata' field.
   * @param value the value to set.
   */
  public void setLoudnessMetadata(com.beligum.blocks.schema.ebucore.v2015.avro.loudnessMetadataType value) {
    this.loudnessMetadata = value;
  }

  /**
   * Gets the value of the 'audioProgrammeReferenceScreen' field.
   */
  public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeReferenceScreenType getAudioProgrammeReferenceScreen() {
    return audioProgrammeReferenceScreen;
  }

  /**
   * Sets the value of the 'audioProgrammeReferenceScreen' field.
   * @param value the value to set.
   */
  public void setAudioProgrammeReferenceScreen(com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeReferenceScreenType value) {
    this.audioProgrammeReferenceScreen = value;
  }

  /** Creates a new audioProgrammeType RecordBuilder */
  public static com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder newBuilder() {
    return new com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder();
  }
  
  /** Creates a new audioProgrammeType RecordBuilder by copying an existing Builder */
  public static com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder newBuilder(com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder other) {
    return new com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder(other);
  }
  
  /** Creates a new audioProgrammeType RecordBuilder by copying an existing audioProgrammeType instance */
  public static com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder newBuilder(com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType other) {
    return new com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder(other);
  }
  
  /**
   * RecordBuilder for audioProgrammeType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<audioProgrammeType>
    implements org.apache.avro.data.RecordBuilder<audioProgrammeType> {

    private java.lang.CharSequence audioProgrammeID;
    private java.lang.CharSequence audioProgrammeName;
    private java.lang.CharSequence audioProgrammeLanguage;
    private java.lang.CharSequence start;
    private java.lang.CharSequence end;
    private java.lang.CharSequence typeLabel;
    private java.lang.CharSequence typeDefinition;
    private java.lang.CharSequence typeLink;
    private java.lang.CharSequence typeSource;
    private java.lang.CharSequence typeNamespace;
    private java.lang.CharSequence typeLanguage;
    private java.lang.CharSequence formatLabel;
    private java.lang.CharSequence formatDefinition;
    private java.lang.CharSequence formatLink;
    private java.lang.CharSequence formatSource;
    private java.lang.CharSequence formatNamespace;
    private java.lang.CharSequence formatLanguage;
    private java.lang.Float maxDuckingDepth;
    private java.util.List<java.lang.CharSequence> audioContentIDRef;
    private com.beligum.blocks.schema.ebucore.v2015.avro.loudnessMetadataType loudnessMetadata;
    private com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeReferenceScreenType audioProgrammeReferenceScreen;

    /** Creates a new Builder */
    private Builder() {
      super(com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.audioProgrammeID)) {
        this.audioProgrammeID = data().deepCopy(fields()[0].schema(), other.audioProgrammeID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.audioProgrammeName)) {
        this.audioProgrammeName = data().deepCopy(fields()[1].schema(), other.audioProgrammeName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.audioProgrammeLanguage)) {
        this.audioProgrammeLanguage = data().deepCopy(fields()[2].schema(), other.audioProgrammeLanguage);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.start)) {
        this.start = data().deepCopy(fields()[3].schema(), other.start);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.end)) {
        this.end = data().deepCopy(fields()[4].schema(), other.end);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.typeLabel)) {
        this.typeLabel = data().deepCopy(fields()[5].schema(), other.typeLabel);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.typeDefinition)) {
        this.typeDefinition = data().deepCopy(fields()[6].schema(), other.typeDefinition);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.typeLink)) {
        this.typeLink = data().deepCopy(fields()[7].schema(), other.typeLink);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.typeSource)) {
        this.typeSource = data().deepCopy(fields()[8].schema(), other.typeSource);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.typeNamespace)) {
        this.typeNamespace = data().deepCopy(fields()[9].schema(), other.typeNamespace);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.typeLanguage)) {
        this.typeLanguage = data().deepCopy(fields()[10].schema(), other.typeLanguage);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.formatLabel)) {
        this.formatLabel = data().deepCopy(fields()[11].schema(), other.formatLabel);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.formatDefinition)) {
        this.formatDefinition = data().deepCopy(fields()[12].schema(), other.formatDefinition);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.formatLink)) {
        this.formatLink = data().deepCopy(fields()[13].schema(), other.formatLink);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.formatSource)) {
        this.formatSource = data().deepCopy(fields()[14].schema(), other.formatSource);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.formatNamespace)) {
        this.formatNamespace = data().deepCopy(fields()[15].schema(), other.formatNamespace);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.formatLanguage)) {
        this.formatLanguage = data().deepCopy(fields()[16].schema(), other.formatLanguage);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.maxDuckingDepth)) {
        this.maxDuckingDepth = data().deepCopy(fields()[17].schema(), other.maxDuckingDepth);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.audioContentIDRef)) {
        this.audioContentIDRef = data().deepCopy(fields()[18].schema(), other.audioContentIDRef);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.loudnessMetadata)) {
        this.loudnessMetadata = data().deepCopy(fields()[19].schema(), other.loudnessMetadata);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.audioProgrammeReferenceScreen)) {
        this.audioProgrammeReferenceScreen = data().deepCopy(fields()[20].schema(), other.audioProgrammeReferenceScreen);
        fieldSetFlags()[20] = true;
      }
    }
    
    /** Creates a Builder by copying an existing audioProgrammeType instance */
    private Builder(com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType other) {
            super(com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.SCHEMA$);
      if (isValidValue(fields()[0], other.audioProgrammeID)) {
        this.audioProgrammeID = data().deepCopy(fields()[0].schema(), other.audioProgrammeID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.audioProgrammeName)) {
        this.audioProgrammeName = data().deepCopy(fields()[1].schema(), other.audioProgrammeName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.audioProgrammeLanguage)) {
        this.audioProgrammeLanguage = data().deepCopy(fields()[2].schema(), other.audioProgrammeLanguage);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.start)) {
        this.start = data().deepCopy(fields()[3].schema(), other.start);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.end)) {
        this.end = data().deepCopy(fields()[4].schema(), other.end);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.typeLabel)) {
        this.typeLabel = data().deepCopy(fields()[5].schema(), other.typeLabel);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.typeDefinition)) {
        this.typeDefinition = data().deepCopy(fields()[6].schema(), other.typeDefinition);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.typeLink)) {
        this.typeLink = data().deepCopy(fields()[7].schema(), other.typeLink);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.typeSource)) {
        this.typeSource = data().deepCopy(fields()[8].schema(), other.typeSource);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.typeNamespace)) {
        this.typeNamespace = data().deepCopy(fields()[9].schema(), other.typeNamespace);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.typeLanguage)) {
        this.typeLanguage = data().deepCopy(fields()[10].schema(), other.typeLanguage);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.formatLabel)) {
        this.formatLabel = data().deepCopy(fields()[11].schema(), other.formatLabel);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.formatDefinition)) {
        this.formatDefinition = data().deepCopy(fields()[12].schema(), other.formatDefinition);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.formatLink)) {
        this.formatLink = data().deepCopy(fields()[13].schema(), other.formatLink);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.formatSource)) {
        this.formatSource = data().deepCopy(fields()[14].schema(), other.formatSource);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.formatNamespace)) {
        this.formatNamespace = data().deepCopy(fields()[15].schema(), other.formatNamespace);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.formatLanguage)) {
        this.formatLanguage = data().deepCopy(fields()[16].schema(), other.formatLanguage);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.maxDuckingDepth)) {
        this.maxDuckingDepth = data().deepCopy(fields()[17].schema(), other.maxDuckingDepth);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.audioContentIDRef)) {
        this.audioContentIDRef = data().deepCopy(fields()[18].schema(), other.audioContentIDRef);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.loudnessMetadata)) {
        this.loudnessMetadata = data().deepCopy(fields()[19].schema(), other.loudnessMetadata);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.audioProgrammeReferenceScreen)) {
        this.audioProgrammeReferenceScreen = data().deepCopy(fields()[20].schema(), other.audioProgrammeReferenceScreen);
        fieldSetFlags()[20] = true;
      }
    }

    /** Gets the value of the 'audioProgrammeID' field */
    public java.lang.CharSequence getAudioProgrammeID() {
      return audioProgrammeID;
    }
    
    /** Sets the value of the 'audioProgrammeID' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setAudioProgrammeID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.audioProgrammeID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'audioProgrammeID' field has been set */
    public boolean hasAudioProgrammeID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'audioProgrammeID' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearAudioProgrammeID() {
      audioProgrammeID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'audioProgrammeName' field */
    public java.lang.CharSequence getAudioProgrammeName() {
      return audioProgrammeName;
    }
    
    /** Sets the value of the 'audioProgrammeName' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setAudioProgrammeName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.audioProgrammeName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'audioProgrammeName' field has been set */
    public boolean hasAudioProgrammeName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'audioProgrammeName' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearAudioProgrammeName() {
      audioProgrammeName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'audioProgrammeLanguage' field */
    public java.lang.CharSequence getAudioProgrammeLanguage() {
      return audioProgrammeLanguage;
    }
    
    /** Sets the value of the 'audioProgrammeLanguage' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setAudioProgrammeLanguage(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.audioProgrammeLanguage = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'audioProgrammeLanguage' field has been set */
    public boolean hasAudioProgrammeLanguage() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'audioProgrammeLanguage' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearAudioProgrammeLanguage() {
      audioProgrammeLanguage = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'start' field */
    public java.lang.CharSequence getStart() {
      return start;
    }
    
    /** Sets the value of the 'start' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setStart(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.start = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'start' field has been set */
    public boolean hasStart() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'start' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearStart() {
      start = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'end' field */
    public java.lang.CharSequence getEnd() {
      return end;
    }
    
    /** Sets the value of the 'end' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setEnd(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.end = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'end' field has been set */
    public boolean hasEnd() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'end' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearEnd() {
      end = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'typeLabel' field */
    public java.lang.CharSequence getTypeLabel() {
      return typeLabel;
    }
    
    /** Sets the value of the 'typeLabel' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setTypeLabel(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.typeLabel = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'typeLabel' field has been set */
    public boolean hasTypeLabel() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'typeLabel' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearTypeLabel() {
      typeLabel = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'typeDefinition' field */
    public java.lang.CharSequence getTypeDefinition() {
      return typeDefinition;
    }
    
    /** Sets the value of the 'typeDefinition' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setTypeDefinition(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.typeDefinition = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'typeDefinition' field has been set */
    public boolean hasTypeDefinition() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'typeDefinition' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearTypeDefinition() {
      typeDefinition = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'typeLink' field */
    public java.lang.CharSequence getTypeLink() {
      return typeLink;
    }
    
    /** Sets the value of the 'typeLink' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setTypeLink(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.typeLink = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'typeLink' field has been set */
    public boolean hasTypeLink() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'typeLink' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearTypeLink() {
      typeLink = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'typeSource' field */
    public java.lang.CharSequence getTypeSource() {
      return typeSource;
    }
    
    /** Sets the value of the 'typeSource' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setTypeSource(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.typeSource = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'typeSource' field has been set */
    public boolean hasTypeSource() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'typeSource' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearTypeSource() {
      typeSource = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'typeNamespace' field */
    public java.lang.CharSequence getTypeNamespace() {
      return typeNamespace;
    }
    
    /** Sets the value of the 'typeNamespace' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setTypeNamespace(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.typeNamespace = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'typeNamespace' field has been set */
    public boolean hasTypeNamespace() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'typeNamespace' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearTypeNamespace() {
      typeNamespace = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'typeLanguage' field */
    public java.lang.CharSequence getTypeLanguage() {
      return typeLanguage;
    }
    
    /** Sets the value of the 'typeLanguage' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setTypeLanguage(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.typeLanguage = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'typeLanguage' field has been set */
    public boolean hasTypeLanguage() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'typeLanguage' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearTypeLanguage() {
      typeLanguage = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'formatLabel' field */
    public java.lang.CharSequence getFormatLabel() {
      return formatLabel;
    }
    
    /** Sets the value of the 'formatLabel' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setFormatLabel(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.formatLabel = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'formatLabel' field has been set */
    public boolean hasFormatLabel() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'formatLabel' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearFormatLabel() {
      formatLabel = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'formatDefinition' field */
    public java.lang.CharSequence getFormatDefinition() {
      return formatDefinition;
    }
    
    /** Sets the value of the 'formatDefinition' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setFormatDefinition(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.formatDefinition = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'formatDefinition' field has been set */
    public boolean hasFormatDefinition() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'formatDefinition' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearFormatDefinition() {
      formatDefinition = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'formatLink' field */
    public java.lang.CharSequence getFormatLink() {
      return formatLink;
    }
    
    /** Sets the value of the 'formatLink' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setFormatLink(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.formatLink = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'formatLink' field has been set */
    public boolean hasFormatLink() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'formatLink' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearFormatLink() {
      formatLink = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'formatSource' field */
    public java.lang.CharSequence getFormatSource() {
      return formatSource;
    }
    
    /** Sets the value of the 'formatSource' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setFormatSource(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.formatSource = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'formatSource' field has been set */
    public boolean hasFormatSource() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'formatSource' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearFormatSource() {
      formatSource = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'formatNamespace' field */
    public java.lang.CharSequence getFormatNamespace() {
      return formatNamespace;
    }
    
    /** Sets the value of the 'formatNamespace' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setFormatNamespace(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.formatNamespace = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'formatNamespace' field has been set */
    public boolean hasFormatNamespace() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'formatNamespace' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearFormatNamespace() {
      formatNamespace = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'formatLanguage' field */
    public java.lang.CharSequence getFormatLanguage() {
      return formatLanguage;
    }
    
    /** Sets the value of the 'formatLanguage' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setFormatLanguage(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.formatLanguage = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'formatLanguage' field has been set */
    public boolean hasFormatLanguage() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'formatLanguage' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearFormatLanguage() {
      formatLanguage = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'maxDuckingDepth' field */
    public java.lang.Float getMaxDuckingDepth() {
      return maxDuckingDepth;
    }
    
    /** Sets the value of the 'maxDuckingDepth' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setMaxDuckingDepth(java.lang.Float value) {
      validate(fields()[17], value);
      this.maxDuckingDepth = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'maxDuckingDepth' field has been set */
    public boolean hasMaxDuckingDepth() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'maxDuckingDepth' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearMaxDuckingDepth() {
      maxDuckingDepth = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'audioContentIDRef' field */
    public java.util.List<java.lang.CharSequence> getAudioContentIDRef() {
      return audioContentIDRef;
    }
    
    /** Sets the value of the 'audioContentIDRef' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setAudioContentIDRef(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[18], value);
      this.audioContentIDRef = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'audioContentIDRef' field has been set */
    public boolean hasAudioContentIDRef() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'audioContentIDRef' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearAudioContentIDRef() {
      audioContentIDRef = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'loudnessMetadata' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.loudnessMetadataType getLoudnessMetadata() {
      return loudnessMetadata;
    }
    
    /** Sets the value of the 'loudnessMetadata' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setLoudnessMetadata(com.beligum.blocks.schema.ebucore.v2015.avro.loudnessMetadataType value) {
      validate(fields()[19], value);
      this.loudnessMetadata = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'loudnessMetadata' field has been set */
    public boolean hasLoudnessMetadata() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'loudnessMetadata' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearLoudnessMetadata() {
      loudnessMetadata = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'audioProgrammeReferenceScreen' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeReferenceScreenType getAudioProgrammeReferenceScreen() {
      return audioProgrammeReferenceScreen;
    }
    
    /** Sets the value of the 'audioProgrammeReferenceScreen' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder setAudioProgrammeReferenceScreen(com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeReferenceScreenType value) {
      validate(fields()[20], value);
      this.audioProgrammeReferenceScreen = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'audioProgrammeReferenceScreen' field has been set */
    public boolean hasAudioProgrammeReferenceScreen() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'audioProgrammeReferenceScreen' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeType.Builder clearAudioProgrammeReferenceScreen() {
      audioProgrammeReferenceScreen = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    public audioProgrammeType build() {
      try {
        audioProgrammeType record = new audioProgrammeType();
        record.audioProgrammeID = fieldSetFlags()[0] ? this.audioProgrammeID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.audioProgrammeName = fieldSetFlags()[1] ? this.audioProgrammeName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.audioProgrammeLanguage = fieldSetFlags()[2] ? this.audioProgrammeLanguage : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.start = fieldSetFlags()[3] ? this.start : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.end = fieldSetFlags()[4] ? this.end : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.typeLabel = fieldSetFlags()[5] ? this.typeLabel : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.typeDefinition = fieldSetFlags()[6] ? this.typeDefinition : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.typeLink = fieldSetFlags()[7] ? this.typeLink : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.typeSource = fieldSetFlags()[8] ? this.typeSource : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.typeNamespace = fieldSetFlags()[9] ? this.typeNamespace : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.typeLanguage = fieldSetFlags()[10] ? this.typeLanguage : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.formatLabel = fieldSetFlags()[11] ? this.formatLabel : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.formatDefinition = fieldSetFlags()[12] ? this.formatDefinition : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.formatLink = fieldSetFlags()[13] ? this.formatLink : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.formatSource = fieldSetFlags()[14] ? this.formatSource : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.formatNamespace = fieldSetFlags()[15] ? this.formatNamespace : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.formatLanguage = fieldSetFlags()[16] ? this.formatLanguage : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.maxDuckingDepth = fieldSetFlags()[17] ? this.maxDuckingDepth : (java.lang.Float) defaultValue(fields()[17]);
        record.audioContentIDRef = fieldSetFlags()[18] ? this.audioContentIDRef : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[18]);
        record.loudnessMetadata = fieldSetFlags()[19] ? this.loudnessMetadata : (com.beligum.blocks.schema.ebucore.v2015.avro.loudnessMetadataType) defaultValue(fields()[19]);
        record.audioProgrammeReferenceScreen = fieldSetFlags()[20] ? this.audioProgrammeReferenceScreen : (com.beligum.blocks.schema.ebucore.v2015.avro.audioProgrammeReferenceScreenType) defaultValue(fields()[20]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
