/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.beligum.blocks.schema.ebucore.v2015.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class zoneExclusionType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"zoneExclusionType\",\"namespace\":\"com.beligum.blocks.schema.ebucore.v2015.avro\",\"fields\":[{\"name\":\"zone\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"zoneType\",\"fields\":[{\"name\":\"minX\",\"type\":[\"null\",\"float\"],\"source\":\"attribute minX\"},{\"name\":\"maxX\",\"type\":[\"null\",\"float\"],\"source\":\"attribute maxX\"},{\"name\":\"minY\",\"type\":[\"null\",\"float\"],\"source\":\"attribute minY\"},{\"name\":\"maxY\",\"type\":[\"null\",\"float\"],\"source\":\"attribute maxY\"},{\"name\":\"minZ\",\"type\":[\"null\",\"float\"],\"source\":\"attribute minZ\"},{\"name\":\"maxZ\",\"type\":[\"null\",\"float\"],\"source\":\"attribute maxZ\"}]}},\"source\":\"element zone\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<com.beligum.blocks.schema.ebucore.v2015.avro.zoneType> zone;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public zoneExclusionType() {}

  /**
   * All-args constructor.
   */
  public zoneExclusionType(java.util.List<com.beligum.blocks.schema.ebucore.v2015.avro.zoneType> zone) {
    this.zone = zone;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return zone;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: zone = (java.util.List<com.beligum.blocks.schema.ebucore.v2015.avro.zoneType>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'zone' field.
   */
  public java.util.List<com.beligum.blocks.schema.ebucore.v2015.avro.zoneType> getZone() {
    return zone;
  }

  /**
   * Sets the value of the 'zone' field.
   * @param value the value to set.
   */
  public void setZone(java.util.List<com.beligum.blocks.schema.ebucore.v2015.avro.zoneType> value) {
    this.zone = value;
  }

  /** Creates a new zoneExclusionType RecordBuilder */
  public static com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType.Builder newBuilder() {
    return new com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType.Builder();
  }
  
  /** Creates a new zoneExclusionType RecordBuilder by copying an existing Builder */
  public static com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType.Builder newBuilder(com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType.Builder other) {
    return new com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType.Builder(other);
  }
  
  /** Creates a new zoneExclusionType RecordBuilder by copying an existing zoneExclusionType instance */
  public static com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType.Builder newBuilder(com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType other) {
    return new com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType.Builder(other);
  }
  
  /**
   * RecordBuilder for zoneExclusionType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<zoneExclusionType>
    implements org.apache.avro.data.RecordBuilder<zoneExclusionType> {

    private java.util.List<com.beligum.blocks.schema.ebucore.v2015.avro.zoneType> zone;

    /** Creates a new Builder */
    private Builder() {
      super(com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.zone)) {
        this.zone = data().deepCopy(fields()[0].schema(), other.zone);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing zoneExclusionType instance */
    private Builder(com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType other) {
            super(com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType.SCHEMA$);
      if (isValidValue(fields()[0], other.zone)) {
        this.zone = data().deepCopy(fields()[0].schema(), other.zone);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'zone' field */
    public java.util.List<com.beligum.blocks.schema.ebucore.v2015.avro.zoneType> getZone() {
      return zone;
    }
    
    /** Sets the value of the 'zone' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType.Builder setZone(java.util.List<com.beligum.blocks.schema.ebucore.v2015.avro.zoneType> value) {
      validate(fields()[0], value);
      this.zone = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'zone' field has been set */
    public boolean hasZone() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'zone' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.zoneExclusionType.Builder clearZone() {
      zone = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public zoneExclusionType build() {
      try {
        zoneExclusionType record = new zoneExclusionType();
        record.zone = fieldSetFlags()[0] ? this.zone : (java.util.List<com.beligum.blocks.schema.ebucore.v2015.avro.zoneType>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
