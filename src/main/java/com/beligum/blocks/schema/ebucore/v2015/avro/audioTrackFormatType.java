/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.beligum.blocks.schema.ebucore.v2015.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class audioTrackFormatType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"audioTrackFormatType\",\"namespace\":\"com.beligum.blocks.schema.ebucore.v2015.avro\",\"fields\":[{\"name\":\"audioTrackFormatID\",\"type\":[\"null\",\"string\"],\"source\":\"attribute audioTrackFormatID\"},{\"name\":\"audioTrackFormatName\",\"type\":[\"null\",\"string\"],\"source\":\"attribute audioTrackFormatName\"},{\"name\":\"formatLabel\",\"type\":[\"null\",\"string\"],\"source\":\"attribute formatLabel\"},{\"name\":\"formatDefinition\",\"type\":[\"null\",\"string\"],\"source\":\"attribute formatDefinition\"},{\"name\":\"formatLink\",\"type\":[\"null\",\"string\"],\"source\":\"attribute formatLink\"},{\"name\":\"formatSource\",\"type\":[\"null\",\"string\"],\"source\":\"attribute formatSource\"},{\"name\":\"formatNamespace\",\"type\":[\"null\",\"string\"],\"source\":\"attribute formatNamespace\"},{\"name\":\"formatLanguage\",\"type\":[\"null\",\"string\"],\"source\":\"attribute formatLanguage\"},{\"name\":\"audioStreamFormatIDRef\",\"type\":[\"null\",\"string\"],\"source\":\"element audioStreamFormatIDRef\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence audioTrackFormatID;
  @Deprecated public java.lang.CharSequence audioTrackFormatName;
  @Deprecated public java.lang.CharSequence formatLabel;
  @Deprecated public java.lang.CharSequence formatDefinition;
  @Deprecated public java.lang.CharSequence formatLink;
  @Deprecated public java.lang.CharSequence formatSource;
  @Deprecated public java.lang.CharSequence formatNamespace;
  @Deprecated public java.lang.CharSequence formatLanguage;
  @Deprecated public java.lang.CharSequence audioStreamFormatIDRef;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public audioTrackFormatType() {}

  /**
   * All-args constructor.
   */
  public audioTrackFormatType(java.lang.CharSequence audioTrackFormatID, java.lang.CharSequence audioTrackFormatName, java.lang.CharSequence formatLabel, java.lang.CharSequence formatDefinition, java.lang.CharSequence formatLink, java.lang.CharSequence formatSource, java.lang.CharSequence formatNamespace, java.lang.CharSequence formatLanguage, java.lang.CharSequence audioStreamFormatIDRef) {
    this.audioTrackFormatID = audioTrackFormatID;
    this.audioTrackFormatName = audioTrackFormatName;
    this.formatLabel = formatLabel;
    this.formatDefinition = formatDefinition;
    this.formatLink = formatLink;
    this.formatSource = formatSource;
    this.formatNamespace = formatNamespace;
    this.formatLanguage = formatLanguage;
    this.audioStreamFormatIDRef = audioStreamFormatIDRef;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return audioTrackFormatID;
    case 1: return audioTrackFormatName;
    case 2: return formatLabel;
    case 3: return formatDefinition;
    case 4: return formatLink;
    case 5: return formatSource;
    case 6: return formatNamespace;
    case 7: return formatLanguage;
    case 8: return audioStreamFormatIDRef;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: audioTrackFormatID = (java.lang.CharSequence)value$; break;
    case 1: audioTrackFormatName = (java.lang.CharSequence)value$; break;
    case 2: formatLabel = (java.lang.CharSequence)value$; break;
    case 3: formatDefinition = (java.lang.CharSequence)value$; break;
    case 4: formatLink = (java.lang.CharSequence)value$; break;
    case 5: formatSource = (java.lang.CharSequence)value$; break;
    case 6: formatNamespace = (java.lang.CharSequence)value$; break;
    case 7: formatLanguage = (java.lang.CharSequence)value$; break;
    case 8: audioStreamFormatIDRef = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'audioTrackFormatID' field.
   */
  public java.lang.CharSequence getAudioTrackFormatID() {
    return audioTrackFormatID;
  }

  /**
   * Sets the value of the 'audioTrackFormatID' field.
   * @param value the value to set.
   */
  public void setAudioTrackFormatID(java.lang.CharSequence value) {
    this.audioTrackFormatID = value;
  }

  /**
   * Gets the value of the 'audioTrackFormatName' field.
   */
  public java.lang.CharSequence getAudioTrackFormatName() {
    return audioTrackFormatName;
  }

  /**
   * Sets the value of the 'audioTrackFormatName' field.
   * @param value the value to set.
   */
  public void setAudioTrackFormatName(java.lang.CharSequence value) {
    this.audioTrackFormatName = value;
  }

  /**
   * Gets the value of the 'formatLabel' field.
   */
  public java.lang.CharSequence getFormatLabel() {
    return formatLabel;
  }

  /**
   * Sets the value of the 'formatLabel' field.
   * @param value the value to set.
   */
  public void setFormatLabel(java.lang.CharSequence value) {
    this.formatLabel = value;
  }

  /**
   * Gets the value of the 'formatDefinition' field.
   */
  public java.lang.CharSequence getFormatDefinition() {
    return formatDefinition;
  }

  /**
   * Sets the value of the 'formatDefinition' field.
   * @param value the value to set.
   */
  public void setFormatDefinition(java.lang.CharSequence value) {
    this.formatDefinition = value;
  }

  /**
   * Gets the value of the 'formatLink' field.
   */
  public java.lang.CharSequence getFormatLink() {
    return formatLink;
  }

  /**
   * Sets the value of the 'formatLink' field.
   * @param value the value to set.
   */
  public void setFormatLink(java.lang.CharSequence value) {
    this.formatLink = value;
  }

  /**
   * Gets the value of the 'formatSource' field.
   */
  public java.lang.CharSequence getFormatSource() {
    return formatSource;
  }

  /**
   * Sets the value of the 'formatSource' field.
   * @param value the value to set.
   */
  public void setFormatSource(java.lang.CharSequence value) {
    this.formatSource = value;
  }

  /**
   * Gets the value of the 'formatNamespace' field.
   */
  public java.lang.CharSequence getFormatNamespace() {
    return formatNamespace;
  }

  /**
   * Sets the value of the 'formatNamespace' field.
   * @param value the value to set.
   */
  public void setFormatNamespace(java.lang.CharSequence value) {
    this.formatNamespace = value;
  }

  /**
   * Gets the value of the 'formatLanguage' field.
   */
  public java.lang.CharSequence getFormatLanguage() {
    return formatLanguage;
  }

  /**
   * Sets the value of the 'formatLanguage' field.
   * @param value the value to set.
   */
  public void setFormatLanguage(java.lang.CharSequence value) {
    this.formatLanguage = value;
  }

  /**
   * Gets the value of the 'audioStreamFormatIDRef' field.
   */
  public java.lang.CharSequence getAudioStreamFormatIDRef() {
    return audioStreamFormatIDRef;
  }

  /**
   * Sets the value of the 'audioStreamFormatIDRef' field.
   * @param value the value to set.
   */
  public void setAudioStreamFormatIDRef(java.lang.CharSequence value) {
    this.audioStreamFormatIDRef = value;
  }

  /** Creates a new audioTrackFormatType RecordBuilder */
  public static com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder newBuilder() {
    return new com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder();
  }
  
  /** Creates a new audioTrackFormatType RecordBuilder by copying an existing Builder */
  public static com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder newBuilder(com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder other) {
    return new com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder(other);
  }
  
  /** Creates a new audioTrackFormatType RecordBuilder by copying an existing audioTrackFormatType instance */
  public static com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder newBuilder(com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType other) {
    return new com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder(other);
  }
  
  /**
   * RecordBuilder for audioTrackFormatType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<audioTrackFormatType>
    implements org.apache.avro.data.RecordBuilder<audioTrackFormatType> {

    private java.lang.CharSequence audioTrackFormatID;
    private java.lang.CharSequence audioTrackFormatName;
    private java.lang.CharSequence formatLabel;
    private java.lang.CharSequence formatDefinition;
    private java.lang.CharSequence formatLink;
    private java.lang.CharSequence formatSource;
    private java.lang.CharSequence formatNamespace;
    private java.lang.CharSequence formatLanguage;
    private java.lang.CharSequence audioStreamFormatIDRef;

    /** Creates a new Builder */
    private Builder() {
      super(com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.audioTrackFormatID)) {
        this.audioTrackFormatID = data().deepCopy(fields()[0].schema(), other.audioTrackFormatID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.audioTrackFormatName)) {
        this.audioTrackFormatName = data().deepCopy(fields()[1].schema(), other.audioTrackFormatName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.formatLabel)) {
        this.formatLabel = data().deepCopy(fields()[2].schema(), other.formatLabel);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.formatDefinition)) {
        this.formatDefinition = data().deepCopy(fields()[3].schema(), other.formatDefinition);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.formatLink)) {
        this.formatLink = data().deepCopy(fields()[4].schema(), other.formatLink);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.formatSource)) {
        this.formatSource = data().deepCopy(fields()[5].schema(), other.formatSource);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.formatNamespace)) {
        this.formatNamespace = data().deepCopy(fields()[6].schema(), other.formatNamespace);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.formatLanguage)) {
        this.formatLanguage = data().deepCopy(fields()[7].schema(), other.formatLanguage);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.audioStreamFormatIDRef)) {
        this.audioStreamFormatIDRef = data().deepCopy(fields()[8].schema(), other.audioStreamFormatIDRef);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing audioTrackFormatType instance */
    private Builder(com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType other) {
            super(com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.SCHEMA$);
      if (isValidValue(fields()[0], other.audioTrackFormatID)) {
        this.audioTrackFormatID = data().deepCopy(fields()[0].schema(), other.audioTrackFormatID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.audioTrackFormatName)) {
        this.audioTrackFormatName = data().deepCopy(fields()[1].schema(), other.audioTrackFormatName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.formatLabel)) {
        this.formatLabel = data().deepCopy(fields()[2].schema(), other.formatLabel);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.formatDefinition)) {
        this.formatDefinition = data().deepCopy(fields()[3].schema(), other.formatDefinition);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.formatLink)) {
        this.formatLink = data().deepCopy(fields()[4].schema(), other.formatLink);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.formatSource)) {
        this.formatSource = data().deepCopy(fields()[5].schema(), other.formatSource);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.formatNamespace)) {
        this.formatNamespace = data().deepCopy(fields()[6].schema(), other.formatNamespace);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.formatLanguage)) {
        this.formatLanguage = data().deepCopy(fields()[7].schema(), other.formatLanguage);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.audioStreamFormatIDRef)) {
        this.audioStreamFormatIDRef = data().deepCopy(fields()[8].schema(), other.audioStreamFormatIDRef);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'audioTrackFormatID' field */
    public java.lang.CharSequence getAudioTrackFormatID() {
      return audioTrackFormatID;
    }
    
    /** Sets the value of the 'audioTrackFormatID' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder setAudioTrackFormatID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.audioTrackFormatID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'audioTrackFormatID' field has been set */
    public boolean hasAudioTrackFormatID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'audioTrackFormatID' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder clearAudioTrackFormatID() {
      audioTrackFormatID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'audioTrackFormatName' field */
    public java.lang.CharSequence getAudioTrackFormatName() {
      return audioTrackFormatName;
    }
    
    /** Sets the value of the 'audioTrackFormatName' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder setAudioTrackFormatName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.audioTrackFormatName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'audioTrackFormatName' field has been set */
    public boolean hasAudioTrackFormatName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'audioTrackFormatName' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder clearAudioTrackFormatName() {
      audioTrackFormatName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'formatLabel' field */
    public java.lang.CharSequence getFormatLabel() {
      return formatLabel;
    }
    
    /** Sets the value of the 'formatLabel' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder setFormatLabel(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.formatLabel = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'formatLabel' field has been set */
    public boolean hasFormatLabel() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'formatLabel' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder clearFormatLabel() {
      formatLabel = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'formatDefinition' field */
    public java.lang.CharSequence getFormatDefinition() {
      return formatDefinition;
    }
    
    /** Sets the value of the 'formatDefinition' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder setFormatDefinition(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.formatDefinition = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'formatDefinition' field has been set */
    public boolean hasFormatDefinition() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'formatDefinition' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder clearFormatDefinition() {
      formatDefinition = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'formatLink' field */
    public java.lang.CharSequence getFormatLink() {
      return formatLink;
    }
    
    /** Sets the value of the 'formatLink' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder setFormatLink(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.formatLink = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'formatLink' field has been set */
    public boolean hasFormatLink() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'formatLink' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder clearFormatLink() {
      formatLink = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'formatSource' field */
    public java.lang.CharSequence getFormatSource() {
      return formatSource;
    }
    
    /** Sets the value of the 'formatSource' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder setFormatSource(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.formatSource = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'formatSource' field has been set */
    public boolean hasFormatSource() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'formatSource' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder clearFormatSource() {
      formatSource = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'formatNamespace' field */
    public java.lang.CharSequence getFormatNamespace() {
      return formatNamespace;
    }
    
    /** Sets the value of the 'formatNamespace' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder setFormatNamespace(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.formatNamespace = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'formatNamespace' field has been set */
    public boolean hasFormatNamespace() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'formatNamespace' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder clearFormatNamespace() {
      formatNamespace = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'formatLanguage' field */
    public java.lang.CharSequence getFormatLanguage() {
      return formatLanguage;
    }
    
    /** Sets the value of the 'formatLanguage' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder setFormatLanguage(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.formatLanguage = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'formatLanguage' field has been set */
    public boolean hasFormatLanguage() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'formatLanguage' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder clearFormatLanguage() {
      formatLanguage = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'audioStreamFormatIDRef' field */
    public java.lang.CharSequence getAudioStreamFormatIDRef() {
      return audioStreamFormatIDRef;
    }
    
    /** Sets the value of the 'audioStreamFormatIDRef' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder setAudioStreamFormatIDRef(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.audioStreamFormatIDRef = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'audioStreamFormatIDRef' field has been set */
    public boolean hasAudioStreamFormatIDRef() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'audioStreamFormatIDRef' field */
    public com.beligum.blocks.schema.ebucore.v2015.avro.audioTrackFormatType.Builder clearAudioStreamFormatIDRef() {
      audioStreamFormatIDRef = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public audioTrackFormatType build() {
      try {
        audioTrackFormatType record = new audioTrackFormatType();
        record.audioTrackFormatID = fieldSetFlags()[0] ? this.audioTrackFormatID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.audioTrackFormatName = fieldSetFlags()[1] ? this.audioTrackFormatName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.formatLabel = fieldSetFlags()[2] ? this.formatLabel : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.formatDefinition = fieldSetFlags()[3] ? this.formatDefinition : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.formatLink = fieldSetFlags()[4] ? this.formatLink : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.formatSource = fieldSetFlags()[5] ? this.formatSource : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.formatNamespace = fieldSetFlags()[6] ? this.formatNamespace : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.formatLanguage = fieldSetFlags()[7] ? this.formatLanguage : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.audioStreamFormatIDRef = fieldSetFlags()[8] ? this.audioStreamFormatIDRef : (java.lang.CharSequence) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
